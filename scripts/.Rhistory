labs(title = "2018 White Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop),
text = paste(
"Block Face: ", location_id,
"<br>Percentage of White: ", round(White_prop,2),
"<br>Percentage of Black: ", round(Black_prop,2),
"<br>Percentage of Asian: ", round(Asian_prop,2),
"<br>Percentage of Latinx: ", round(Latinx_prop,2),
"<br>Percentage of Native American: ", round(NatAm_prop,2),
"<br>Percentage of Multiracial: ", round(Multi_prop,2),
"<br>Total observation: ", total)),
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop),
text = paste(
"Block Face: ", location_id,
"<br>Percentage of White: ", round(White_prop,2),
"<br>Percentage of Black: ", round(Black_prop,2),
"<br>Percentage of Asian: ", round(Asian_prop,2),
"<br>Percentage of Latinx: ", round(Latinx_prop,2),
"<br>Percentage of Native American: ", round(NatAm_prop,2),
"<br>Percentage of Multiracial: ", round(Multi_prop,2),
"<br>Total observation: ", total),
shape = 20,
size = 4,
alpha = 0.85) +
scale_color_continuous(name="White Proportion",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 White Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop,
text = paste(
"Block Face: ", location_id,
"<br>Percentage of White: ", round(White_prop,2),
"<br>Percentage of Black: ", round(Black_prop,2),
"<br>Percentage of Asian: ", round(Asian_prop,2),
"<br>Percentage of Latinx: ", round(Latinx_prop,2),
"<br>Percentage of Native American: ", round(NatAm_prop,2),
"<br>Percentage of Multiracial: ", round(Multi_prop,2),
"<br>Total observation: ", total),
shape = 20,
size = 4,
alpha = 0.85))+
scale_color_continuous(name="White Proportion",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 White Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
p <- ggplotly(, tooltip = "text")
library(plotly)
p <- ggplotly(, tooltip = "text")
names(race_prop_18_locid_geo)
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop,
text = paste(
"Block Face: ", location_id,
"<br>Percentage of White: ", round(White_prop,2),
"<br>Percentage of Black: ", round(Black_prop,2),
"<br>Percentage of Asian: ", round(Asian_prop,2),
"<br>Percentage of Latinx: ", round(Latinx_prop,2),
"<br>Percentage of Native American: ", round(NatAm_prop,2),
"<br>Percentage of Multiracial: ", round(Multi_prop,2),
"<br>Total observation: ", total_count),
shape = 20,
size = 4,
alpha = 0.85))+
scale_color_continuous(name="White Proportion",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 White Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
p <- ggplotly(, tooltip = "text")
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop,
text = paste(
"Block Face: ", location_id,
"<br>Percentage of White: ", round(White_prop,2),
"<br>Percentage of Black: ", round(Black_prop,2),
"<br>Percentage of Asian: ", round(Asian_prop,2),
"<br>Percentage of Latinx: ", round(Latinx_prop,2),
"<br>Percentage of Native American: ", round(NatAm_prop,2),
"<br>Percentage of Multiracial: ", round(Multi_prop,2),
"<br>Total observation: ", total_count)),
shape = 20,
size = 4,
alpha = 0.85)+
scale_color_continuous(name="White Proportion",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 White Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
p <- ggplotly(, tooltip = "text")
p
library(htmlwidgets)
p
saveWidget(p, here("Interactive", "2018_Race_interactive.html"), selfcontained = FALSE, libdir = "libs")
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop,
text = paste(
"Block Face: ", location_id,
"<br>Percentage of White: ", round(White_prop,2),
"<br>Percentage of Black: ", round(Black_prop,2),
"<br>Percentage of Asian: ", round(Asian_prop,2),
"<br>Percentage of Latinx: ", round(Latinx_prop,2),
"<br>Percentage of Native American: ", round(NatAm_prop,2),
"<br>Percentage of Multiracial: ", round(Multi_prop,2),
"<br>Total observation: ", total_count)),
shape = 20,
size = 4,
alpha = 0.85)+
scale_color_continuous(name="Percentage of White People Staying",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 White Staying Proportion by Observation Site") +
labs(fill="Observation Sites")
p <- ggplotly(, tooltip = "text")
saveWidget(p, here("Interactive", "2018_Race_interactive.html"), selfcontained = FALSE, libdir = "libs")
knitr::opts_chunk$set(echo = TRUE)
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop,
text = paste(
"Block Face: ", location_id,
"<br>Percentage of White: ", round(White_prop,2),
"<br>Percentage of Black: ", round(Black_prop,2),
"<br>Percentage of Asian: ", round(Asian_prop,2),
"<br>Percentage of Latinx: ", round(Latinx_prop,2),
"<br>Percentage of Native American: ", round(NatAm_prop,2),
"<br>Percentage of Multiracial: ", round(Multi_prop,2),
"<br>Total observation: ", total_count)),
shape = 20,
size = 4,
alpha = 0.85)+
scale_color_continuous(name="Percentage of White People Staying",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Percentage of White People Staying by Observation Site") +
labs(fill="Observation Sites")
rm(list=ls())
library(tidyverse)
library(sf)
library(here)
library(scales) # to edit decimal places shown in legend
library(plotly)
library(htmlwidgets)
SPL_1823 <- read.csv(here("data","SPL_1823.csv"))
SPL_1823_geo <- st_read(here("data", "SPL_1823_location.geojson")) # location_id shapefiles and lat/long coordinates
SEA_map <- st_read(here("data/raw","04_SPL_Seattle_Map.geojson")) # base SEA neighborhood map
SPL_1823 <- SPL_1823 %>%
mutate(
race=recode(staying_race_ethnicity,
"A" = "URM", # Asian
"B" = "URM", # Black or African American
"L" = "URM", # Latino/a or Hispanic
"M" = "URM", # Multiple, assumed to be multiracial
"N" = "URM", # Native American or Alaskan Native
"P" = "URM", # Pacific Island or Native Hawaiian, no observations in dataset
"U" = "Unsure", # Unsure
"W" = "White")) # White
table(SPL_1823$race)
table(SPL_1823$staying_race_ethnicity)
# Realized there were many blanks, so wanted to see where these were coming from
table(SPL_1823$staying_race_ethnicity[SPL_1823$study_id == "2023_Seattle_Citywide"])
# Confirmed that 2023 did not collect race data, so only have race data for 2018
SPL_18 <- SPL_1823 %>%
filter(SPL_1823$study_id == "2018_Seattle_Citywide")
# Run tables again
table(SPL_18$race)
table(SPL_18$staying_race_ethnicity)
# Only 142 blanks now, which seems more normal
race_prop_locid <- SPL_18 %>%
group_by(location_id, staying_race_ethnicity) %>%
dplyr::summarise(count = n()) %>%
pivot_wider(id_cols = location_id,
names_from = staying_race_ethnicity,
values_from = count,
names_prefix = "Observed_") %>%
replace(is.na(.), 0) %>%
rowwise() %>%
mutate(total_count = sum(c_across(starts_with("Observed_")))) %>%
ungroup() %>%
mutate(Asian_prop  = round(Observed_A/total_count, 2),
Black_prop  = round(Observed_B/total_count, 2),
Latinx_prop = round(Observed_L/total_count, 2),
Multi_prop  = round(Observed_M/total_count, 2),
NatAm_prop  = round(Observed_N/total_count, 2),
White_prop  = round(Observed_W/total_count, 2)) %>%
select(location_id, Asian_prop, Black_prop, Latinx_prop, Multi_prop, NatAm_prop, White_prop, total_count) # Adding the total count for the interactive plots
race_prop_18_locid_geo <- left_join(race_prop_locid, SPL_1823_geo, by = "location_id")
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data = race_prop_18_locid_geo,
aes(x = longitude, y = latitude, color = White_prop,
text = paste(
"Block Face: ", location_id,
"<br>Percentage of White: ", round(White_prop,2),
"<br>Percentage of Black: ", round(Black_prop,2),
"<br>Percentage of Asian: ", round(Asian_prop,2),
"<br>Percentage of Latinx: ", round(Latinx_prop,2),
"<br>Percentage of Native American: ", round(NatAm_prop,2),
"<br>Percentage of Multiracial: ", round(Multi_prop,2),
"<br>Total observation: ", total_count)),
shape = 20,
size = 4,
alpha = 0.85)+
scale_color_continuous(name="Percentage of White People Staying",
low = "lightblue",
high = "darkblue",
limits = c(0,1),
labels = label_number(accuracy = 0.01)) +
labs(title = "2018 Percentage of White People Staying by Observation Site") +
labs(fill="Observation Sites")
p <- ggplotly(, tooltip = "text")
p
saveWidget(p, here("Interactive", "2018_Race_interactive.html"), selfcontained = FALSE, libdir = "libs")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(psych)
library(dplyr)
library(sf)
library(here)
library(plotly)
library(htmlwidgets)
SPL_1823 <- read.csv(here("data","SPL_1823.csv"))
SPL_1823_geo <- st_read(here("data", "SPL_1823_location.geojson")) # location_id shapefiles and lat/long coordinates
SEA_map <- st_read(here("data/raw","04_SPL_Seattle_Map.geojson")) # base SEA neighborhood map
SPL_1823 <- SPL_1823 %>%
mutate(
gender=recode(staying_gender,
"Female"="Fem",
"Feminine presenting"="Fem",
"Gender-non-conforming presenting" = "non_conforming",
"Male"="Masc",
"Masculine presenting"="Masc",
"Other_Unsure"="Unsure",
"Unsure"="Unsure"))
# table(SPL_1823$gender)
# table(SPL_1823$staying_gender)
# instead of doing a f:m ratio, calculate the proportion of total observed that are women/men
FM_prop_shood <- SPL_1823 %>%
group_by(S_HOOD, gender, study_id) %>%
dplyr::summarise(count= n()) %>%
pivot_wider(
id_cols = c(S_HOOD, study_id),
names_from = gender,
values_from = count,
names_prefix = "Observed_"
) %>%
rowwise() %>% #this is to make sure the total is calculated correctly in the next line
dplyr::mutate(total = sum(c_across(Observed_Fem:Observed_non_conforming), na.rm=T)) %>% #calculate total observed, including observations where no one was observed!
mutate_at(vars(Observed_Fem, Observed_Masc, Observed_non_conforming, Observed_Unsure), ~replace_na(., 0)) %>% #replace NAs with 0s so that the calculated proportions return 0 and not NA
mutate(F_prop = Observed_Fem/total,
M_prop = Observed_Masc/total) %>%
select(S_HOOD, study_id, F_prop, M_prop, Observed_Fem, Observed_Masc, total)
FM_prop_shood
# note that the total is the sum of fem, masc, non_conforming, unsure, and empty observations (i.e., empty locations where no one was staying at all). this is why e.g., Bitter Lake in 2018 has 1 fem, 0 masc, and 16 total observations
# instead of doing a f:m ratio, calculate the proportion of total observed that are women/men
FM_prop_locid <- SPL_1823 %>%
group_by(location_id, gender, study_id) %>%
dplyr::summarise(count= n()) %>%
pivot_wider(
id_cols = c(location_id, study_id),
names_from = gender,
values_from = count,
names_prefix = "Observed_"
) %>%
rowwise() %>% #this is to make sure the total is calculated correctly in the next line
dplyr::mutate(total = sum(c_across(Observed_Fem:Observed_non_conforming), na.rm=T)) %>% #calculate total observed
mutate_at(vars(Observed_Fem, Observed_Masc, Observed_non_conforming, Observed_Unsure), ~replace_na(., 0)) %>% #replace NAs with 0s so that the calculated proportions return 0 and not NA
mutate(F_prop = Observed_Fem/total,
M_prop = Observed_Masc/total,
NB_prop = Observed_NB/total) %>%
select(location_id, study_id, F_prop, M_prop, NB_prop, Observed_Fem, Observed_Masc, Observed_NB,total)
# instead of doing a f:m ratio, calculate the proportion of total observed that are women/men
FM_prop_locid <- SPL_1823 %>%
group_by(location_id, gender, study_id) %>%
dplyr::summarise(count= n()) %>%
pivot_wider(
id_cols = c(location_id, study_id),
names_from = gender,
values_from = count,
names_prefix = "Observed_"
) %>%
rowwise() %>% #this is to make sure the total is calculated correctly in the next line
dplyr::mutate(total = sum(c_across(Observed_Fem:Observed_non_conforming), na.rm=T)) %>% #calculate total observed
mutate_at(vars(Observed_Fem, Observed_Masc, Observed_non_conforming, Observed_Unsure), ~replace_na(., 0)) %>% #replace NAs with 0s so that the calculated proportions return 0 and not NA
mutate(F_prop = Observed_Fem/total,
M_prop = Observed_Masc/total,
NB_prop = Observed_non_conforming/total) %>%
select(location_id, study_id, F_prop, M_prop, NB_prop, Observed_Fem, Observed_Masc, Observed_non_conforming,total)
FM_prop_locid
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(tidyverse)
library(psych)
library(dplyr)
library(sf)
library(here)
library(plotly)
SPL_1823 <- read.csv(here("data","SPL_1823.csv"))
SPL_1823_geo <- st_read(here("data", "SPL_1823_location.geojson")) # location_id shapefiles and lat/long coordinates
SEA_map <- st_read(here("data/raw","04_SPL_Seattle_Map.geojson")) # base SEA neighborhood map
# inspect age col
table(SPL_1823$staying_age, SPL_1823$study_id)
# looks like in 2023 they collapsed 25-44 and 45-64 together into 25-64
SPL_1823 <- SPL_1823 %>%
mutate(
age=recode(staying_age,
"25-44"="25-64",
"45-64"="25-64"))
# table(SPL_1823$age)
# table(SPL_1823$staying_age)
age_prop_locid <- SPL_1823 %>%
group_by(location_id, age, study_id) %>%
dplyr::summarise(count= n()) %>%
mutate(age = ifelse(age == "", "NA", age)) %>% #replace the empty strings with NA otherwise it won't pivot
pivot_wider(
id_cols = c(location_id, study_id),
names_from = age,
values_from = count) %>%
rowwise() %>% #this is to make sure the total is calculated correctly in the next line
dplyr::mutate(total = sum(`0-4`, `15-24`, `25-64`, `5-14`, `65+`, `NA`, na.rm=T)) %>% #calculate total observed
mutate_at(vars(`0-4`, `15-24`, `25-64`, `5-14`, `65+`, `NA`), ~replace_na(., 0)) %>% #replace NAs with 0s so that the calculated proportions return 0 and not NA
mutate(toddler_prop = `0-4`/total,
tween_prop = `5-14`/total,
ya_prop = `15-24`/total, #ya stands for young adult
adult_prop = `25-64`/total,
senior_prop = `65+`/total) %>%
select(location_id, study_id, toddler_prop, tween_prop, ya_prop, adult_prop, senior_prop, total)
# append S_HOOD back
age_prop_locid <- SPL_1823 %>%
select(location_id, S_HOOD) %>%
distinct() %>%
right_join(age_prop_locid, by = "location_id")
# Filter 2018 data ----
age_prop_18_locid <- age_prop_locid %>% filter(study_id == "2018_Seattle_Citywide")
# Join location_id coordinates with 2018 filtered data ----
age_prop_18_locid_geo <- left_join(age_prop_18_locid, SPL_1823_geo, by = "location_id")
# Toddlers ----
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data=age_prop_18_locid_geo,
aes(x=longitude, y=latitude, color = toddler_prop, alpha = 0.95),
shape=20,
size=3) + # add points
scale_color_gradientn(name="%: Toddler/Total",
colours = c("slategray1","royalblue4"),
limits = c(0, 0.1),
breaks = c(0, 0.02, 0.04, 0.06, 0.08, 0.1)) + #Create the breaks
scale_alpha_continuous(guide = "none")+
labs(title = "2018 Percentage of Toddlers Staying by Observation Site") +
labs(fill="Observation Sites")
# Tween ----
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data=age_prop_18_locid_geo,
aes(x=longitude, y=latitude, color = tween_prop, alpha = 0.95),
shape=20,
size=3) + # add points
scale_color_gradientn(name="%: Tween/Total",
colours = c("slategray1","royalblue4"),
limits = c(0, 0.2),
breaks = c(0, 0.05, 0.10, 0.15, 0.20)) + #Create the breaks
scale_alpha_continuous(guide = "none")+
labs(title = "2018 Percentage of Tweens Staying by Observation Site") +
labs(fill="Observation Sites")
# Young Adults  ----
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data=age_prop_18_locid_geo,
aes(x=longitude, y=latitude, color = ya_prop, alpha = 0.95),
shape=20,
size=3) + # add points
scale_color_gradientn(name="%: Young Adults/Total",
colours = c("slategray1","royalblue4"),
limits = c(0, 0.5),
breaks = c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + #Create the breaks
scale_alpha_continuous(guide = "none")+
labs(title = "2018 Percentage of Young Adults Staying by Observation Site") +
labs(fill="Observation Sites")
# Adults  ----
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data=age_prop_18_locid_geo,
aes(x=longitude, y=latitude, color = adult_prop, alpha = 0.95),
shape=20,
size=3) + # add points
scale_color_gradientn(name="%: Adults/Total",
colours = c("slategray1","royalblue4"),
limits = c(0, 1),
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1.0)) + #Create the breaks
scale_alpha_continuous(guide = "none")+
labs(title = "2018 Percentage of Adults Staying by Observation Site") +
labs(fill="Observation Sites")
# Senior  ----
ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data=age_prop_18_locid_geo,
aes(x=longitude, y=latitude, color = senior_prop, alpha = 0.95),
shape=20,
size=3) + # add points
scale_color_gradientn(name="%: Seniors/Total",
colours = c("slategray1","royalblue4"),
limits = c(0, 0.8),
breaks = c(0, 0.2, 0.4, 0.6, 0.8)) + #Create the breaks
scale_alpha_continuous(guide = "none")+
labs(title = "2018 Percentage of Seniors Staying by Observation Site") +
labs(fill="Observation Sites")
# using adults as base plot
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data=age_prop_18_locid_geo,
aes(x=longitude,
y=latitude,
color = adult_prop,
text = paste("Block Face: ", location_id,
"<br>Percentage of toddlers: ", round(toddler_prop,2),
"<br>Percentage of tweens: ", round(tween_prop,2),
"<br>Percentage of young adults: ", round(ya_prop,2),
"<br>Percentage of adults: ", round(adult_prop,2),
"<br>Percentage of seniors: ", round(senior_prop,2),
"<br>Total observation: ", total),
alpha = 0.95),
shape=20,
size=4) + # add points
scale_color_gradientn(name="%: Adult/Total", colours = c("slategray1","royalblue4"),
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),
limits = c(0, 1)) +
scale_alpha_continuous(guide = "none")+
labs(title = "2018 Percentage of Adults Staying by Observation Site") +
labs(fill="Observation Sites")
p <- ggplotly(p, tooltip = "text")
p
htmlwidgets::saveWidget(p, here("Interactive", "2018_Age_interactive.html"), selfcontained = FALSE, libdir = "libs")
# using adults as base plot
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data=age_prop_23_locid_geo,
aes(x=longitude, y=latitude, color = adult_prop,
text = paste("Block Face: ", location_id,
"<br>Percentage of toddlers: ", round(toddler_prop,2),
"<br>Percentage of tweens: ", round(tween_prop,2),
"<br>Percentage of young adults: ", round(ya_prop,2),
"<br>Percentage of adults: ", round(adult_prop,2),
"<br>Percentage of seniors: ", round(senior_prop,2),
"<br>Total observation: ", total),
alpha = 0.95),
shape=20,
size=4) + # add points
scale_color_gradientn(name="%: Adult/Total", colours = c("slategray1","royalblue4"), #Specify the colors for each end
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),
limits = c(0, 1)) +
scale_alpha_continuous(guide = "none")+
labs(title = "2023 Percentage of Adults Staying by Observation Site") +
labs(fill="Observation Sites")
# Filter 2023 data ----
age_prop_23_locid <- age_prop_locid %>% filter(study_id == "2023_Seattle_Citywide")
# Join location_id coordinates with 2018 filtered data ----
age_prop_23_locid_geo <- left_join(age_prop_23_locid, SPL_1823_geo, by = "location_id")
# using adults as base plot
p <- ggplot() +
geom_sf(data = SEA_map) + #plot base SEA neighborhood map
geom_point(data=age_prop_23_locid_geo,
aes(x=longitude, y=latitude, color = adult_prop,
text = paste("Block Face: ", location_id,
"<br>Percentage of toddlers: ", round(toddler_prop,2),
"<br>Percentage of tweens: ", round(tween_prop,2),
"<br>Percentage of young adults: ", round(ya_prop,2),
"<br>Percentage of adults: ", round(adult_prop,2),
"<br>Percentage of seniors: ", round(senior_prop,2),
"<br>Total observation: ", total),
alpha = 0.95),
shape=20,
size=4) + # add points
scale_color_gradientn(name="%: Adult/Total", colours = c("slategray1","royalblue4"), #Specify the colors for each end
breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),
limits = c(0, 1)) +
scale_alpha_continuous(guide = "none")+
labs(title = "2023 Percentage of Adults Staying by Observation Site") +
labs(fill="Observation Sites")
p <- ggplotly(p, tooltip = "text")
p
htmlwidgets::saveWidget(p, here("Interactive", "2023_Age_interactive.html"), selfcontained = FALSE, libdir = "libs")
