#library(sf)
#library(leaflet)#allowing mapping in R
SPL <- GET("https://data.seattle.gov/resource/5mzj-4rtf.json?$limit=20000")
SPL #Status code 200 (success)
rm(list=ls())
library(httr)
library(jsonlite)
library(tidyverse)
library(psych)
library(dplyr)
library(sf)
install.packages("sf")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(httr)
library(jsonlite)
library(tidyverse)
library(psych)
library(dplyr)
library(sf)
install.packages("sf")
library(sf)
install.packages("sf")
library(sf)
install.packages("sf")
library(sf)
library(sf)
library(sf)
library(tidyverse)
library(rstatix)
library(arsenal)
## Load in scripts ##
source("DIYfunctions.R")
source("APA_tables.R")
#Load in data
data <- read.csv("C1e_data_clean.csv")
ttestapa(data$sh_avg, data$condition)
ttestapa(data$discomf_avg, data$condition)
ttestapa(data$interest_avg, data$condition)
ttestapa(data$manip_1, data$condition)
ttestapa(data$manip_2, data$condition)
ttestapa(data$clothes_avg, data$condition)
ttestapa(data$selfcred_avg, data$condition)
ttestapa(data$shonly_avg, data$condition)
ttestapa(data$ghonly_avg, data$condition)
library(apaTables)
test <- data %>% select(sh_avg + feel_1 + feel_2 + feel_3 + feel_4 + feel_5 + feel_6 + feel_7 + discomf_avg + feel_8 + feel_9 + feel_10 + feel_11 + interest_avg + eval_1 + eval_2 + selfproto_avg + manip_1 + manip_2 + clothes_avg + manip_3 + manip_4 + selfcred_avg + eval_3 + eval_4 + shonly_avg + ghonly_avg)
test <- data %>% dplyr::select(sh_avg + feel_1 + feel_2 + feel_3 + feel_4 + feel_5 + feel_6 + feel_7 + discomf_avg + feel_8 + feel_9 + feel_10 + feel_11 + interest_avg + eval_1 + eval_2 + selfproto_avg + manip_1 + manip_2 + clothes_avg + manip_3 + manip_4 + selfcred_avg + eval_3 + eval_4 + shonly_avg + ghonly_avg)
test <- data %>% dplyr:::select(sh_avg + feel_1 + feel_2 + feel_3 + feel_4 + feel_5 + feel_6 + feel_7 + discomf_avg + feel_8 + feel_9 + feel_10 + feel_11 + interest_avg + eval_1 + eval_2 + selfproto_avg + manip_1 + manip_2 + clothes_avg + manip_3 + manip_4 + selfcred_avg + eval_3 + eval_4 + shonly_avg + ghonly_avg)
test <- data %>% dplyr::select(sh_avg + feel_1 + feel_2 + feel_3 + feel_4 + feel_5 + feel_6 + feel_7 + discomf_avg + feel_8 + feel_9 + feel_10 + feel_11 + interest_avg + eval_1 + eval_2 + selfproto_avg + manip_1 + manip_2 + clothes_avg + manip_3 + manip_4 + selfcred_avg + eval_3 + eval_4 + shonly_avg + ghonly_avg)
#Load in data
data <- read.csv("C1e_data_clean.csv")
test <-
data %>%
dplyr::select(sh_avg + feel_1 + feel_2 + feel_3 + feel_4 + feel_5 + feel_6 + feel_7 + discomf_avg + feel_8 + feel_9 + feel_10 + feel_11 + interest_avg + eval_1 + eval_2 + selfproto_avg + manip_1 + manip_2 + clothes_avg + manip_3 + manip_4 + selfcred_avg + eval_3 + eval_4 + shonly_avg + ghonly_avg)
View(data)
test <-
data %>%
select(sh_avg, discomf_avg, interest_avg, manip_1, manip_2, selfproto_avg, clothes_avg, selfcred_avg)
cor_apa(test)
apa.cor.table(test)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(httr)
library(jsonlite)
library(tidyverse)
library(psych)
library(dplyr)
library(sf)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
install.package("sf")
install.packages("sf")
install.packages("sf")
ibrary(leaflet)#allowi
install.packages("Rcpp")
install.packages("sf")
library(sf)
library(Rcpp)
library(sf)
library(sf)
knitr::opts_chunk$set(echo = TRUE)
install.packages("sf")
library(sf)
rm(list=ls())
library(httr)
library(jsonlite)
library(tidyverse)
library(psych)
library(dplyr)
library(sf)
#library(leaflet)#allowing mapping in R
SPL <- GET("https://data.seattle.gov/resource/5mzj-4rtf.json?$limit=20000")
SPL #Status code 200 (success)
SPL_staying <- fromJSON(rawToChar(SPL$content))
#Create a separate dataset for 2018 and 2023 data
SPL_staying_sub <- SPL_staying%>%
filter(study_id=="2018_Seattle_Citywide" | study_id =="2023_Seattle_Citywide")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(httr)
library(jsonlite)
library(tidyverse)
library(psych)
library(dplyr)
library(sf)
#library(leaflet)#allowing mapping in R
SPL <- GET("https://data.seattle.gov/resource/5mzj-4rtf.json?$limit=20000")
SPL #Status code 200 (success)
SPL_staying <- fromJSON(rawToChar(SPL$content))
#Create a separate dataset for 2018 and 2023 data
SPL_staying_sub <- SPL_staying%>%
filter(study_id=="2018_Seattle_Citywide" | study_id =="2023_Seattle_Citywide")
View(SPL_staying)
View(SPL_staying_sub)
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(fm_ratio = length(staying_gender == "Female" | staying_gender == "Feminine Presenting"))
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(fm_ratio = length(staying_gender == "Female" | staying_gender == "Feminine Presenting")/
length(staying_gender == "Male" | staying_gender == "Masculine Presenting"))
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(fm_ratio = (length(staying_gender == "Female" | staying_gender == "Feminine Presenting")/
length(staying_gender == "Male" | staying_gender == "Masculine Presenting")))
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(fm_ratio = (length(staying_gender == "Female" | staying_gender == "Feminine Presenting") /
length(staying_gender == "Male" | staying_gender == "Masculine Presenting")))
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(f = length(staying_gender == "Female" | staying_gender == "Feminine Presenting"),
m = length(staying_gender == "Male" | staying_gender == "Masculine Presenting"))
SPL_staying_sub %>%
group_by(location_id) %>%
mutate(fm_ration = (length(staying_gender == "Female" | staying_gender == "Feminine Presenting"))/(length(staying_gender == "Male" | staying_gender == "Masculine Presenting")))
SPL_staying_sub %>%
group_by(location_id) %>%
mutate(f = length(staying_gender == "Female" | staying_gender == "Feminine Presenting"),
m = length(staying_gender == "Male" | staying_gender == "Masculine Presenting"))
tail(SPL_staying_sub$staying_gender)
SPL_staying_sub %>%
group_by(location_id) %>%
mutate(f = length(staying_gender == "Female" | staying_gender == "Feminine Presenting")) %>%
mutate(m = length(staying_gender == "Male" | staying_gender == "Masculine Presenting"))
SPL_staying_sub %>%
group_by(location_id) %>%
#mutate(f = length(staying_gender == "Female" | staying_gender == "Feminine Presenting")) %>%
mutate(m = length(staying_gender == "Male" | staying_gender == "Masculine Presenting"))
SPL_staying_sub %>%
group_by(location_id) %>%
mutate(f = length(staying_gender == "Female" | staying_gender == "Feminine Presenting")) #%>%
SPL_staying_sub %>%
group_by(location_id) %>%
mutate(f = sum(staying_gender == "Female" | staying_gender == "Feminine Presenting")) #%>%
SPL_staying_sub %>%
group_by(location_id) %>%
mutate(f = count(staying_gender == "Female" | staying_gender == "Feminine Presenting")) #%>%
SPL_staying_sub %>%
group_by(location_id) %>%
add_count(staying_gender, name = "freq")
SPL_staying_sub %>%
group_by(location_id, staying_gender) %>%
summarise(n = n()) %>%
complete(class, fill = list(n = 0)) %>%
group_by(class) %>%
mutate(freq = n / sum(n), n = sum(n)) %>%
pivot_wider(names_from = value, values_from = freq)
SPL_staying_sub %>%
groups(location_id, staying_gender) %>%
summarise(n = n()) %>%
complete(class, fill = list(n = 0)) %>%
group_by(class) %>%
mutate(freq = n / sum(n), n = sum(n)) %>%
pivot_wider(names_from = value, values_from = freq)
SPL_staying_sub %>%
group_by(location_id, staying_gender) %>%
summarise(n = n()) %>%
complete(staying_gender, fill = list(n = 0)) %>%
group_by(staying_gender) %>%
mutate(freq = n / sum(n), n = sum(n)) %>%
pivot_wider(names_from = value, values_from = freq)
SPL_staying_sub %>%
group_by(location_id, staying_gender) %>%
summarise(n = n()) %>%
complete(staying_gender, fill = list(n = 0)) %>%
group_by(staying_gender) %>%
mutate(freq = n / sum(n), n = sum(n)) %>%
pivot_wider(names_from = staying_gender, values_from = freq)
SPL_staying_sub %>%
group_by(staying_gender, location_id) %>%
summarise(n = n()) %>%
complete(location_id, fill = list(n = 0)) %>%
group_by(location_id) %>%
mutate(freq = n / sum(n), n = sum(n)) %>%
pivot_wider(names_from = location_id, values_from = freq)
SPL_staying_sub %>%
group_by(staying_gender, location_id) %>%
summarise(n = n()) %>%
complete(location_id, fill = list(n = 0)) %>%
group_by(location_id) %>%
mutate(freq = n / sum(n), n = sum(n)) #%>%
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting")
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(staying_gender, location_id) %>%
summarise(n = n()) %>%
complete(location_id, fill = list(n = 0)) %>%
group_by(location_id) %>%
mutate(freq = n / sum(n), n = sum(n)) #%>%
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(staying_gender, location_id) %>%
summarise(n = n()) %>%
complete(location_id, fill = list(n = 0)) %>%
group_by(location_id) %>%
mutate(freq = n / sum(n), n = sum(n)) #%>%
View(test)
#pivot_wider(names_from = location_id, values_from = freq)
test %>% group_by(location_id)
#pivot_wider(names_from = location_id, values_from = freq)
test %>% filter(location_id == "ALK1")
SPL_staying_sub %>%
group_by(location_id) %>%
mutate(mf_ratio = n(staying_gender == "Female" | staying_gender == "Feminine presenting"))
SPL_staying_sub %>%
group_by(location_id) %>%
mutate(mf_ratio = count(staying_gender == "Female" | staying_gender == "Feminine presenting"))
SPL_staying_sub %>%
group_by(location_id) %>%
mutate(mf_ratio = sum(staying_gender == "Female" | staying_gender == "Feminine presenting"))
SPL_staying_sub %>%
group_by(location_id) %>%
mutate(mf_ratio = length(staying_gender == "Female" | staying_gender == "Feminine presenting"))
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(fem = length(staying_gender == "Female"))
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(fem = length(staying_gender == "Female" | length(staying_gender == "Feminine presenting")))
test2 <-
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(freq_fem = length(staying_gender == "Female" | length(staying_gender == "Feminine presenting")),
freq_masc = length(staying_gender == "Male" | length(staying_gender == "Masculine presenting")))
View(test2)
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(freq_fem = sum(staying_gender == "Female" | length(staying_gender == "Feminine presenting")),
freq_masc = sum(staying_gender == "Male" | length(staying_gender == "Masculine presenting")))
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(freq_fem = sum(staying_gender == "Female" | length(staying_gender == "Feminine presenting")),
freq_masc = sum(staying_gender == "Male" | length(staying_gender == "Masculine presenting")))
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(freq_fem = length(staying_gender == "Female" | length(staying_gender == "Feminine presenting")),
freq_masc = length(staying_gender == "Male" | length(staying_gender == "Masculine presenting")))
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(freq_fem = length(staying_gender == "Female" | length(staying_gender == "Feminine presenting")),
freq_masc = length(staying_gender == "Male" | length(staying_gender == "Masculine presenting")))
head(SPL_staying_sub$staying_gender)
str(SPL_staying_sub$staying_gender)
SPL_staying_sub %>%
group_by(location_id) %>%
summarise(freq_fem = frequency(staying_gender == "Female" | length(staying_gender == "Feminine presenting")),
freq_masc = frequency(staying_gender == "Male" | length(staying_gender == "Masculine presenting")))
SPL_staying_sub %>%
group_by(location_id) %>%
transform(Frequency=ave(seq(nrow(.)),staying_gender,FUN=length))
SPL_staying_sub %>%
group_by(location_id) %>%
mutate(new = n()) %>%
data.frame()
SPL_staying_sub %>%
group_by(location_id, staying_gender) %>%
mutate(new = n()) %>%
data.frame()
SPL_staying_sub %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
test <-
SPL_staying_sub %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count)) %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting")
View(test)
test <-
SPL_staying_sub %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
View(test)
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
View(test)
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count)) %>%
pivot_wider(staying_gender)
View(test)
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count)) %>%
pivot_wider(by=staying_gender)
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count)) %>%
pivot_wider(staying_gender, location_id)
View(test)
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count)) %>%
pivot_wider(prop)
View(test)
View(test)
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
View(test)
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n())
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
filter %>% staying_gender == "Female" %>% mutate(fem = n())
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
filter(staying_gender == "Female") %>% mutate(fem = n())
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
mutate(prop = count/sum(count))
View(test)
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
mutate(ratio = case_when(staying_gender == "Female" | staying_gender == "Feminine presenting" ~ count,
staying_gender == "Male" | staying_gender == "Masculine presenting" ~ count))
View(test)
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n())
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(httr)
library(jsonlite)
library(tidyverse)
library(psych)
library(dplyr)
library(sf)
#library(leaflet)#allowing mapping in R
SPL <- GET("https://data.seattle.gov/resource/5mzj-4rtf.json?$limit=20000")
SPL_staying <- fromJSON(rawToChar(SPL$content))
#Create a separate dataset for 2018 and 2023 data
SPL_staying_sub <- SPL_staying%>%
filter(study_id=="2018_Seattle_Citywide" | study_id =="2023_Seattle_Citywide")
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n()) %>%
#mutate(ratio = case_when(staying_gender == "Female" | staying_gender == "Feminine presenting" ~ data$count[],
staying_gender == "Male" | staying_gender == "Masculine presenting" ~ count))
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id, staying_gender) %>%
summarise(count = n())
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
mutate(fem = count(staying_gender == "Female" | staying_gender == "Feminine presenting"))
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
mutate(fem = length(staying_gender == "Female" | staying_gender == "Feminine presenting"))
test$fem
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
mutate(fem = length(staying_gender == "Female" | staying_gender == "Feminine presenting"),
masc = length(staying_gender == "Male" | staying_gender == "Masculine presenting"))
test$masc
head(test$masc)
head(test$fem)
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
mutate(fem = length(which(staying_gender == "Female" | staying_gender == "Feminine presenting")),
masc = length(which(staying_gender == "Male" | staying_gender == "Masculine presenting")))
head(test$masc)
head(test$fem)
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id) %>%
mutate(fem = length(which(staying_gender == "Female" | staying_gender == "Feminine presenting")),
masc = length(which(staying_gender == "Male" | staying_gender == "Masculine presenting")))
head(test$masc)
head(test$fem)
View(test)
test <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>%
group_by(location_id) %>%
mutate(fem = length(which(staying_gender == "Female" | staying_gender == "Feminine presenting")),
masc = length(which(staying_gender == "Male" | staying_gender == "Masculine presenting"))) %>%
mutate(fem_masc_ratio = fem/masc)
View(test)
SPL_staying_sub <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>% # filters to just female/fem and male/masc
group_by(location_id) %>% # groups by location id for subsequent calculations
mutate(fem = length(which(staying_gender == "Female" | staying_gender == "Feminine presenting")),
masc = length(which(staying_gender == "Male" | staying_gender == "Masculine presenting")),
fem_masc_ratio = fem/masc) # creates x2 count columns and ratio column based on them
View(test)
View(SPL_staying_sub)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(httr)
library(jsonlite)
library(tidyverse)
library(psych)
library(dplyr)
library(sf)
#library(leaflet)#allowing mapping in R
SPL <- GET("https://data.seattle.gov/resource/5mzj-4rtf.json?$limit=20000")
SPL_staying <- fromJSON(rawToChar(SPL$content))
#Create a separate dataset for 2018 and 2023 data
SPL_staying_sub <- SPL_staying%>%
filter(study_id=="2018_Seattle_Citywide" | study_id =="2023_Seattle_Citywide")
SPL_staying_sub <-
SPL_staying_sub %>%
filter(staying_gender == "Female" | staying_gender == "Feminine presenting" |
staying_gender == "Male" | staying_gender == "Masculine presenting") %>% # filters to just female/fem and male/masc
group_by(location_id, study_id) %>% # groups by location id for subsequent calculations
mutate(fem = length(which(staying_gender == "Female" | staying_gender == "Feminine presenting")),
masc = length(which(staying_gender == "Male" | staying_gender == "Masculine presenting")),
fem_masc_ratio = fem/masc) # creates x2 count columns and ratio column based on them
SPL_staying_sub %>%
group_by(location_id, study_id) %>%
summarise(n = n(fem_masc_ratio))
SPL_staying_sub %>%
group_by(location_id, study_id) %>%
summarise(n = fem_masc_ratio)
SPL_staying_sub %>%
filter(location_id == CAP2)
SPL_staying_sub %>% filter(location_id == "CAP2")
SPL_staying_sub %>% filter(location_id == "CAP2") %>% select(fem_masc_ratio)
View(SPL_staying_sub)
SPL_staying_sub %>% filter(location_id == "SLU4") %>% select(fem_masc_ratio)
SPL_staying_sub %>% group_by(location_id, study_id, fem_masc_ratio)
